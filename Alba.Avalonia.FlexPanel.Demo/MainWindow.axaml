<Window x:Class="Alba.Avalonia.FlexPanel.Demo.MainWindow"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:Alba.Avalonia.FlexPanel.Demo.ViewModels"
        xmlns:conv="clr-namespace:Alba.Avalonia.FlexPanel.Demo.Converters"
        xmlns:flex="clr-namespace:Alba.Avalonia.FlexPanel;assembly=Alba.Avalonia.FlexPanel"
        x:DataType="vm:MainModel"
        MinWidth="320"
        MinHeight="240"
        Icon="Assets/AvaloniaLogo.ico"
        Title="Avalonia.Flexbox Demo">
    <Window.Resources>
        <conv:NumberToThicknessConverter x:Key="NumberToThicknessConverter" />
        <DataTemplate x:Key="ItemTemplate"
                x:DataType="vm:ItemModel">
            <ListBoxItem Padding="{Binding Value, Converter={StaticResource NumberToThicknessConverter}}"
                    IsSelected="{Binding IsSelected}"
                    Gestures.Tapped="OnItemTapped">
                <ListBoxItem.Styles>
                    <Style Selector="ListBoxItem">
                        <Setter Property="Background" Value="MidnightBlue" />
                    </Style>
                    <Style Selector="ListBoxItem:selected">
                        <Setter Property="Background" Value="MediumSlateBlue" />
                    </Style>
                </ListBoxItem.Styles>
                <TextBlock HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding Value}" />
            </ListBoxItem>
        </DataTemplate>
    </Window.Resources>
    <Window.Styles>
        <Style Selector="CheckBox">
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="Padding" Value="8,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style Selector="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style Selector="RadioButton">
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="Padding" Value="8,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
    </Window.Styles>

    <DockPanel Margin="16">

        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                Padding="0,0,16,0"
                MinWidth="200">

            <StackPanel Spacing="16">
                <TextBlock FontSize="16" Text="Properties" />
                <flex:FlexPanel>
                    <RadioButton IsChecked="{Binding IsItemsControl}" Content="ItemsControl" />
                    <RadioButton IsChecked="{Binding IsItemsRepeater}" Content="ItemsRepeater" />
                </flex:FlexPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="flex-direction:" />
                    <ComboBox ItemsSource="{Binding DirectionValues}" SelectedItem="{Binding Direction}" />
                </StackPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="justify-content:" />
                    <ComboBox ItemsSource="{Binding JustifyContentValues}" SelectedItem="{Binding JustifyContent}" />
                </StackPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="align-items:" />
                    <ComboBox ItemsSource="{Binding AlignItemsValues}" SelectedItem="{Binding AlignItems}" />
                </StackPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="align-content:" />
                    <ComboBox ItemsSource="{Binding AlignContentValues}" SelectedItem="{Binding AlignContent}" />
                </StackPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="flex-wrap:" />
                    <ComboBox ItemsSource="{Binding WrapValues}" SelectedItem="{Binding Wrap}" />
                </StackPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="column-gap:" />
                    <NumericUpDown Minimum="0" Value="{Binding ColumnGap}" />
                </StackPanel>
                <TextBlock Text="Selected item" FontWeight="Black" />
                <StackPanel Spacing="8">
                    <TextBlock Text="row-gap:" />
                    <NumericUpDown Minimum="0" Value="{Binding RowGap}" />
                </StackPanel>
                <CheckBox IsEnabled="{Binding !!SelectedItem}"
                        Content="SelectedItem IsVisible"
                        IsChecked="{Binding SelectedItem.IsVisible, FallbackValue=False}" />
                <StackPanel Spacing="8">
                    <TextBlock Text="align-self:" />
                    <ComboBox IsEnabled="{Binding !!SelectedItem}"
                            ItemsSource="{Binding AlignSelfValues}"
                            SelectedItem="{Binding SelectedItem.AlignSelf, FallbackValue=False}" />
                </StackPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="order:" />
                    <NumericUpDown IsEnabled="{Binding !!SelectedItem}" Value="{Binding SelectedItem.Order, FallbackValue=0}" />
                </StackPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="flex-shrink:" />
                    <NumericUpDown IsEnabled="{Binding !!SelectedItem}" Value="{Binding SelectedItem.FlexShink, FallbackValue=1}" />
                </StackPanel>
                <StackPanel Spacing="8">
                    <TextBlock Text="flex-grow:" />
                    <NumericUpDown IsEnabled="{Binding !!SelectedItem}" Value="{Binding SelectedItem.FlexGrow, FallbackValue=0}" />
                </StackPanel>

                <Grid ColumnDefinitions="*,8,*">
                    <Button Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                            Command="{Binding AddItemCommand}"
                            Content="Add Item" />
                    <Button Grid.Column="2" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                            Command="{Binding RemoveItemCommand}"
                            Content="Remove Item" />
                </Grid>
            </StackPanel>
        </ScrollViewer>
        <ItemsControl HorizontalAlignment="Stretch"
                IsVisible="{Binding IsItemsControl}"
                BorderBrush="DimGray"
                BorderThickness="1"
                ItemsSource="{Binding Numbers}"
                ItemTemplate="{StaticResource ItemTemplate}">
            <ItemsControl.Styles>
                <Style Selector="ContentPresenter" x:DataType="vm:ItemModel">
                    <Setter Property="flex:FlexPanel.AlignSelf" Value="{Binding AlignSelf}" />
                    <Setter Property="flex:FlexPanel.Order" Value="{Binding Order}" />
                    <Setter Property="flex:FlexPanel.FlexShrink" Value="{Binding FlexShink}" />
                    <Setter Property="flex:FlexPanel.FlexGrow" Value="{Binding FlexGrow}" />
                    <Setter Property="IsVisible" Value="{Binding IsVisible}" />
                </Style>
            </ItemsControl.Styles>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <flex:FlexPanel HorizontalAlignment="Stretch"
                            Direction="{Binding Direction}"
                            Wrap="{Binding Wrap}"
                            JustifyContent="{Binding JustifyContent}"
                            AlignItems="{Binding AlignItems}"
                            AlignContent="{Binding AlignContent}"
                            ColumnGap="{Binding ColumnGap}"
                            RowGap="{Binding RowGap}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <Border IsVisible="{Binding IsItemsRepeater}"
                BorderBrush="DimGray"
                BorderThickness="1">

            <ItemsRepeater ItemsSource="{Binding Numbers}"
                    ItemTemplate="{StaticResource ItemTemplate}">
                <ItemsRepeater.Styles>
                    <Style Selector="ListBoxItem" x:DataType="vm:ItemModel">
                        <Setter Property="flex:FlexPanel.AlignSelf" Value="{Binding AlignSelf}" />
                        <Setter Property="flex:FlexPanel.Order" Value="{Binding Order}" />
                        <Setter Property="flex:FlexPanel.FlexShrink" Value="{Binding FlexShink}" />
                        <Setter Property="flex:FlexPanel.FlexGrow" Value="{Binding FlexGrow}" />
                        <Setter Property="IsVisible" Value="{Binding IsVisible}" />
                    </Style>
                </ItemsRepeater.Styles>
                <!--<ItemsRepeater.Layout>
                    <flex:FlexLayout Direction="{Binding Direction}"
                            JustifyContent="{Binding JustifyContent}"
                            AlignItems="{Binding AlignItems}"
                            AlignContent="{Binding AlignContent}"
                            Wrap="{Binding Wrap}"
                            ColumnSpacing="{Binding ColumnSpacing}"
                            RowSpacing="{Binding RowSpacing}" />
                </ItemsRepeater.Layout>-->
            </ItemsRepeater>

        </Border>

    </DockPanel>

</Window>